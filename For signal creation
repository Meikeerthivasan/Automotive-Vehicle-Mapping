radar_speed = 100;
radarmotion = 
phased.Platform('InitialPosition',[0;0;0.5],'Velocity',[radar_speed;0;
0]);
specanalyzer = 
dsp.SpectrumAnalyzer('SampleRate',fs,'PlotAsTwoSidedSpectrum',true,'Ti
tle','Spectrum for received and dechirped signal','ShowLegend',true);
rng(); %random number generator
% The Received signal is dechirped and saved in a buffer and 64 is the 
number of sweeps
% we can even use 8,16,32 sweeps but for better accuracy 64 sweeps is 
used
Nsweep = 64; 
demo = complex(zeros(waveform.SampleRate*waveform.SweepTime,Nsweep));
for n = 1:Nsweep
 % Update radar and target positions
 [radar_pos,radar_vel] = radarmotion(waveform.SweepTime);
 [target_pos,target_vel] = carmotion(waveform.SweepTime);
 % Transmit FMCW waveform
 sig = waveform();
 txsig = transmitter(sig);
 % Propagate the signal and reflect off the target
 txsig = channel(txsig,radar_pos,target_pos,radar_vel,target_vel);
 txsig = cartarget(txsig);
 % Dechirp the received radar return
 txsig = receiver(txsig);
 dechirpsig = dechirp(txsig,sig);
 % Visualize the spectrum
 specanalyzer([txsig dechirpsig]);
 %channel-1 = received signal
 %channel-2 = decyphered signal
 demo(:,n) = dechirpsig;
end
